/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.28
 * Generated at: 2016-02-17 10:34:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.Vector;
import java.sql.*;

public final class cartInsert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


public class DConnection {

    Connection con;
    ResultSet rs=null;
    Statement st;

    public int setData(String str){
        int i=0;
        try{
            Class.forName ("com.mysql.jdbc.Driver");
            //con=DriverManager.getConnection("jdbc:mysql://localhost/shopping?user=root&password=jayvik");
            con = DriverManager.getConnection("jdbc:mysql:/localhost:3306/shopping","root", "root");
            st=con.createStatement();
            st.execute(str);
            i = st.getUpdateCount();
        }catch(Exception e){
           
        }
        return i;
    }

    public ResultSet getData(String str) {

        try{
            Class.forName ("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql:/localhost:3306/shopping","root", "root");
            st=con.createStatement();
            rs = st.executeQuery(str);
        }
        catch (Exception e){
       }
        return rs;
    }

}



	public class CartData{

	String name,code,company;
	int quantity,price;
	
	public void setData(String cd,String nm,String com,int pri,int qau){
		code = cd;
		name = nm;
		company = com;
		quantity = qau;
		price = pri;
	}
	
	public void setQuantity(int qau){
		quantity = qau;
	}
	
	String getCode(){
		return code;
	}
	
	String getName(){
		return name;
	}
	
	String getCompany(){
		return company;
	}
	
	int getQuantity(){
		return quantity;
	}
	
	int getPrice(){
		return price;
	}
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("/csession.jsp", Long.valueOf(1455699933464L));
    _jspx_dependants.put("/CartData.jsp", Long.valueOf(1455699933443L));
    _jspx_dependants.put("/DConnection.jsp", Long.valueOf(1455703489173L));
    _jspx_dependants.put("/menu/ccmenu.jsp", Long.valueOf(1455698146611L));
    _jspx_dependants.put("/menu/header.jsp", Long.valueOf(1455698146621L));
    _jspx_dependants.put("/menu/footer.jsp", Long.valueOf(1455698146621L));
    _jspx_dependants.put("/menu/csidemenu.jsp", Long.valueOf(1455698146611L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Vector");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	String ses[] = session.getValueNames();
	
	if(ses.length==0)
		response.sendRedirect("index.jsp");
	
	for(int le=0;le<ses.length;le++){
		if(ses[le].equals("type")){
			if(session.getAttribute("type").equals("a"))
				response.sendRedirect("aindex.jsp");
		}
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("\t\t<meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("\t\t<title>User Home</title>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"css/validationEngine.jquery.css\" type=\"text/css\" media=\"screen\" title=\"no title\" charset=\"utf-8\" />\r\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"images/Refresh.css\" type=\"text/css\" />\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<script src=\"js/jquery.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("\t\t<script src=\"js/jquery.validationEngine-en.js\" type=\"text/javascript\"></script>\r\n");
      out.write("\t\t<script src=\"js/jquery.validationEngine.js\" type=\"text/javascript\"></script>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<script>\t\r\n");
      out.write("\t\t$(document).ready(function() {\r\n");
      out.write("\t\t\t$(\"#formID\").validationEngine()\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<!-- wrap starts here -->\r\n");
      out.write("<div id=\"wrap\">\r\n");
      out.write("\t");
      out.write("<div id=\"header\">\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t<h1 id=\"logo-text\">ON<span class=\"gray\">line</span></h1>\t\t\r\n");
      out.write("\t\t\t<h2 id=\"slogan\">Change Your Life ... </h2>\t\r\n");
      out.write("</div>");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("<div id=\"menu\">\r\n");
      out.write("\t\t\t<ul>\r\n");
      out.write("\t\t\t\t<li><a href=\"cindex.jsp\">Home</a></li>\r\n");
      out.write("\t\t\t\t<li id=\"current\"><a href=\"cart.jsp\">Cart</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("</div>");
      out.write("\t\r\n");
      out.write("\t<div id=\"content-wrap\">\r\n");
      out.write("\t\t");
      out.write("<div id=\"sidebar\">\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t<h1>Sidebar Menu</h1>\r\n");
      out.write("\t\t\t\t<div class=\"left-box\">\r\n");
      out.write("\t\t\t\t\t<ul class=\"sidemenu\">\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"cindex.jsp\">Home</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"cart.jsp\">Cart</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"logout.jsp\">Logout</a></li>\r\n");
      out.write("\t\t\t\t\t</ul>\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- write your code here -->\r\n");
      out.write("\t\t<div id=\"main\">\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("\r\n");

			String del1="";
			del1=request.getParameter("del1");
			try{
			if(del1!=null){		
				String a = request.getParameter("pqun");
				if(a!=""){
					
 		 		Vector v ;
		 		v = (Vector) session.getAttribute("Data");
		 		CartData d;
         		int f=1;
		 		String cart = request.getParameter("cart");
		 		if(cart!=null){
			 
		 			String pcode = request.getParameter("pcode");
	 	 			String pname = request.getParameter("pname");
	 	 			String pcompany = request.getParameter("pcompany");
           
           			int pprice = Integer.parseInt(request.getParameter("pprice"));
	 	 			int pquantity = Integer.parseInt(request.getParameter("pquantity"));
					int pqun = Integer.parseInt(request.getParameter("pqun"));
			
					if(pquantity<pqun){
						response.sendRedirect("cart.jsp?msg=Quantity high");
					}
					else{

						int i;
	
						for(i=0;i<v.size();i++){
				
						d = new CartData();
						d = (CartData) v.get(i);
		
						if(pcode.equals(d.getCode())){
							pqun = pqun + d.getQuantity();
				    
							if(pqun<pquantity){							
                    	  	d.setQuantity(pqun);
						  	v.set(i,d);
						  //v.setElementAt(d,i);
						  	session.removeAttribute("Data");
						  	session.setAttribute("Data",v);
						  
						  	f=0;
						  	break;
							}else{
								f=0;
								response.sendRedirect("cart.jsp?msg=Quantity high");
							}
						}else{
							f=1;	
						}	
						}
						if(f==1){
							d = new CartData();
                			d.setData(pcode,pname,pcompany,pprice,pqun);
                			v.add(d);
							session.setAttribute("Data",v);
						}
		  			}
	    		 }
			   }else{ response.sendRedirect("cart.jsp?msg=Enter Quantity"); }
			}
		}catch(Exception e){
			response.sendRedirect("cart.jsp?msg=Enter Number");
		}
 
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" ");

	     String del2="";
		 del2=request.getParameter("del1");
		 if(del2!=null){
		out.println("<h1>Cart Data</h1>");
		 Vector v1;
		 v1 = (Vector) session.getAttribute("Data");
		 CartData d1 = new CartData();
		 int j=0;
		 int total=0;
		  out.println("<table border='0'  align='center' width='590px'><tr align='center' bgcolor='#CC99FF' height='50px'><td><b>ID</b></td><td><b>Name</b></td><td><b>Company</b><td><b>Price</b></td><td><b>Quantity</b></td><td></td></tr>");
		 for(j=0;j<v1.size();j++){
			 d1 = (CartData) v1.get(j); 
		
      out.write("\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t\t <form id=\"formID\" method='post' action='cartInsert.jsp?delete=delete&code=");
      out.print(j );
      out.write("' name=\"srch\">\r\n");
      out.write("                <tr align='center' bgcolor=\"#CCCCCC\">\r\n");
      out.write("                \t<td>");
 out.println(d1.getCode()); 
      out.write("</td>\r\n");
      out.write("                    <td>");
 out.println(d1.getName()); 
      out.write("</td>\r\n");
      out.write("                    <td>");
 out.println(d1.getCompany()); 
      out.write("</td>\r\n");
      out.write("                    <td>");
 out.println(d1.getPrice()*d1.getQuantity()); 
      out.write("</td>\r\n");
      out.write("                    <td>");
 out.println(d1.getQuantity()); 
      out.write("</td>\r\n");
      out.write("                   <td><input type=\"submit\" value=\"Delete\" ></td>\r\n");
      out.write("              </form>\r\n");
      out.write("                </tr>\r\n");
      out.write("                ");
 total = total + (d1.getPrice() * d1.getQuantity()); 
				 
		    
		 }
		 
      out.write("\r\n");
      out.write("\t\t <tr bgcolor=\"#9933FF\" align=\"center\">\r\n");
      out.write("\t\t <td>Total</td><td></td><td></td><td>");
 out.println(total); 
      out.write("</td><td></td>\r\n");
      out.write("         </tr>\r\n");
      out.write("         ");

		 out.println("</table>");
      out.write("\r\n");
      out.write("\t\t <a href=\"cart.jsp\" ><h3>Add More Product</h3></a>\r\n");
      out.write("\t\t<a href=\"cartInsert.jsp?check=checkout\" ><h3>Checkout </h3></a>");

		 
		 }
 
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" ");

	String del = "";
	int c;
	
	del=request.getParameter("delete");
	Vector vc = new Vector();
	if(del!=null){
		c = Integer.parseInt(request.getParameter("code"));
		vc = (Vector) session.getAttribute("Data");
		 vc.removeElementAt(c);
		 session.removeAttribute("Data");
		session.setAttribute("Data",vc);
		response.sendRedirect("cart.jsp?msg=New Cart");
	}
 
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" \r\n");

		 String check="";
		 check = request.getParameter("check");
		 if(check!=null){
		 Vector v2;
		 v2 = (Vector) session.getAttribute("Data");
		 CartData d2 = new CartData();

			DConnection r = new DConnection();
			ResultSet rq = null;
					 
		 	String nb = "Select count(bill_no)'No' from bill";
			rq = r.getData(nb);
			int b_no=0;
			while(rq.next()){
				b_no = rq.getInt("No")+1;	
			}
			
		 	String user = (String)session.getAttribute("username");
		 
		 int k=0;
		 int total1=0;
		 out.println("<h1>Your Bill</h1>");
		  out.println("<table border='0'  align='center' width='590px'><tr align='center' bgcolor='#CC99FF' height='50px'><td><b>ID</b></td><td><b>Name</b></td><td><b>Company</b><td><b>Price</b></td><td><b>Quantity</b></td></tr>");
		 for(k=0;k<v2.size();k++){
			 d2 = (CartData) v2.get(k); 
		
      out.write("\r\n");
      out.write("                <tr align='center' bgcolor=\"#CCCCCC\">\r\n");
      out.write("                \t<td>");
 out.println(d2.getCode()); 
      out.write("</td>\r\n");
      out.write("                    <td>");
 out.println(d2.getName()); 
      out.write("</td>\r\n");
      out.write("                    <td>");
 out.println(d2.getCompany()); 
      out.write("</td>\r\n");
      out.write("                    <td>");
 out.println(d2.getPrice()*d2.getQuantity()); 
      out.write("</td>\r\n");
      out.write("                    <td>");
 out.println(d2.getQuantity()); 
      out.write("</td>\r\n");
      out.write("                   \r\n");
      out.write("                </tr>\r\n");
      out.write("           ");

		    total1 = total1 + (d2.getPrice() * d2.getQuantity()); 
			String q1 = "update branch_item set i_quantity = i_quantity - "+d2.getQuantity()+" where i_code = '"+d2.getCode()+"' and b_code = '"+user+"'";
			r.setData(q1);
			String q2 = "insert into bill_detail values('"+b_no+"','"+d2.getCode()+"',"+d2.getQuantity()+")";
			r.setData(q2);
				 
		 }
		 
		 if(total1!=0){
		 	String qry1 = "insert into bill values('"+b_no+"','"+user+"',CURDATE()+0,"+total1+")";
		 	r.setData(qry1);
			v2.removeAllElements();
			session.removeAttribute("user");
			session.setAttribute("Data", v2);
		 }else{
			 response.sendRedirect("cindex.jsp?msg=Create new cart");
		 }
		 
      out.write("\r\n");
      out.write("\t\t <tr bgcolor=\"#9933FF\" align=\"center\">\r\n");
      out.write("\t\t <td>Total</td><td></td><td></td><td>");
 out.println(total1); 
      out.write("</td><td></td>\r\n");
      out.write("         </tr>\r\n");
      out.write("         ");

		 out.println("</table>"); 
      out.write("\r\n");
      out.write("\t\t <a href=\"cart.jsp\" ><h3>New Cart</h3></a>\r\n");
      out.write("\t\t");

		 }
 
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
      out.write("<div id=\"footer\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t&copy; 2010 <strong>ONline</strong> | \r\n");
      out.write("\t\t\tDesign by: | Jayvik.Hitesh.Dhaval\r\n");
      out.write("\t\t\tValid XHTML | \r\n");
      out.write("\t\t\tCSS\r\n");
      out.write("\t\t\t\r\n");
      out.write("   \t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<a href=\"index.jsp\">Home</a>&nbsp;|&nbsp;\r\n");
      out.write("   \t\t<a href=\"index.jsp\">Sitemap</a>&nbsp;|&nbsp;\r\n");
      out.write("\t   \t<a href=\"index.jsp\">RSS Feed</a>\r\n");
      out.write("   \t\t</p>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
